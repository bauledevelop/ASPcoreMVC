@model Shop.Mvc.Areas.Admin.Models.AccountViewModel

@{
    ViewData["Title"] = "Tạo tài khoản";
    Layout = "~/Areas/Admin/Views/Shared/Layout/_Layout.cshtml";
    var typeAccount = (SelectList)ViewData["TypeAccount"];
    var typeSex = (SelectList)ViewData["TypeSex"];
}

<div class="container">
    <div class="card card__pd">
        <div class="col-md-12">
            @using (Html.BeginForm("", "", FormMethod.Post, new { action = "/Admin/Account/Create" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    <h4>Tạo người dùng</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @if (ViewBag.Message != null)
                    {
                        <div class="alert alert-danger">@ViewBag.Message</div>
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                        <div class="form-width-txt">
                            @Html.TextBoxFor(model => model.Username,  htmlAttributes: new { @class = "form-control"} )
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                        <div class="form-width-txt">
                            @Html.PasswordFor(model => model.Password,  htmlAttributes: new { @class = "form-control"})
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        <div class="form-width-txt">
                            @Html.TextBoxFor(model => model.Name,  htmlAttributes: new { @class = "form-control"})
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label " })
                        <div class="form-width-txt">
                            @Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                        <div class="form-width-txt">
                            @Html.TextBoxFor(model => model.Address, htmlAttributes: new { @class = "form-control"})
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                        <div class="form-width-txt">
                            @Html.TextBoxFor(model => model.Phone,  htmlAttributes: new { @class = "form-control"})
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        <div class="form-width-txt">
                            @Html.TextBoxFor(model => model.Email,  htmlAttributes: new { @class = "form-control"})
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.DropDownListFor(model => model.Sex, typeSex,  htmlAttributes: new { @class = "form-control w-25"})
                            @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AccountType, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.DropDownListFor(model => model.AccountType, typeAccount,  htmlAttributes: new { @class = "form-control w-25"})
                            @Html.ValidationMessageFor(model => model.AccountType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label " })
                        <div>
                            @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group mt-4">
                        <div class="col-md-offset-2">
                            <input type="submit" value="Tạo mới" class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

